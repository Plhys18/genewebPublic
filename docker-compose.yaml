version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: golem-backend
    restart: always
    networks:
      - golem-network
    volumes:
      - ./backend/data:/app/data
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost,golem-dev.biodata.ceitec.cz,127.0.0.1,backend,golem-backend
      - DJANGO_SECRET_KEY=your-secure-key-here
      - SECURE_SSL_REDIRECT=False
      - SESSION_COOKIE_SECURE=False
      - CSRF_COOKIE_SECURE=False
    command: >
       bash -c "python manage.py makemigrations &&
           python manage.py migrate &&
           gunicorn --worker-class=sync --workers=3 --bind=0.0.0.0:8000 --timeout=1800 --max-requests=1000 --max-requests-jitter=50 --graceful-timeout=300 --keep-alive=5 --worker-connections=1000 wsgi:application"
  nginx:
    image: nginx:1.25-alpine
    container_name: golem-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./ui/build/web:/usr/share/nginx/html    
    depends_on:
      - backend
    networks:
      - golem-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: golem-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    networks:
      - golem-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  golem-network:
    driver: bridge
