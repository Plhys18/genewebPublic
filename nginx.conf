user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    server {
        listen 80 default_server;
        server_name localhost golem-dev.biodata.ceitec.cz;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location /health {
            return 200 'Nginx is healthy';
            add_header Content-Type text/plain;
        }
        
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 300s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        location /admin/ {
            proxy_pass http://backend:8000/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 300s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }        

        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
        }

        location / {
            try_files /etc/letsencrypt/live/golem-dev.biodata.ceitec.cz/fullchain.pem @serve_local;
            return 301 https://$host$request_uri;
        }

        location @serve_local {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    server {
        listen 443 ssl default_server;
        server_name golem-dev.biodata.ceitec.cz;
        
        ssl_certificate /etc/letsencrypt/live/golem-dev.biodata.ceitec.cz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/golem-dev.biodata.ceitec.cz/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        
        location /health {
            return 200 'HTTPS is working!';
            add_header Content-Type text/plain;
        }
        
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 300s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_intercept_errors on;
            error_page 500 502 503 504 /50x.html;
        }

        location /admin/ {
            proxy_pass http://backend:8000/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 300s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }        

        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
        }

        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            expires 1d;
            add_header Cache-Control "public";
        }

        location = /50x.html {
            return 200 'Backend service temporarily unavailable. Please try again later.';
            add_header Content-Type text/plain;
        }
    }
}
